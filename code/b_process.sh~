#!/bin/bash

#
# process any new zip files in inbox
# track changes in tracking doc
#


if ! [[ "$1" =~ ^(cm|dv|sa)$ ]];
then
    echo "usage: [platform: cm/dv/sa]"
    exit 1
fi


# SAVEPWD=$PWD
# cd ~/docs/gmp_validation


platform=$1


if [[ $platform == "cm" ]];
then
    platform_str="CM_Data_Fluctuation_90_Day"
elif [[ $platform == "dv" ]];
then
    platform_str="dv_fluctuation_"
else
    platform_str=""
fi

filename_pattern="*$platform_str*.zip"



source_dir="./data/inbox"
target_dir="./data/$platform"
if [ ! -d "$source_dir" ]; then
    echo "Source directory $source_dir does not exist."
    exit 1
fi

if [ ! -d "$target_dir" ]; then
    echo "Target directory $target_dir does not exist."
    exit 1
fi



# tracking
if ! test -f ./tracking;
then
    printf "tracking file does not exist... creating file\n"
    printf "report_date\tplatform\tinbox_file\tprocessed_file\ttime_processed\tuploaded\n" >> tracking
fi


files=($(find "$source_dir" -name "$filename_pattern"))
# any files there?
if [ ${#files[@]} -eq 0 ];
then
    echo "No files found in $source_dir that match the pattern $filename_pattern"
    exit 1
fi


# loop through source dir, find filename_pattern
iters=0

for file in "${files[@]}";
do
    csv_file=$(echo "$file" | sed 's/\(.*\)\[[0-9]*\]\.zip/\1.csv/g' | sed "s/inbox/${platform}/g")
    base_name=$(basename "$csv_file")
    proc_file="$target_dir/proc_${base_name%.*}"
    report_date=$(echo "$base_name" | sed 's/.*_\(202[34]\)\([0-9]\{2\}\)\([0-9]\{2\}\)_.*/\1-\2-\3/')

    # check tracking doc for proc_file name
    if grep -q ${proc_file##*/} tracking;
    then
	echo "$proc_file already exists... moving on."
    else
	echo "Unzipping file $file into $target_dir"
	unzip -o "$file" -d "$target_dir"

    
	# strip report settings
	# cm specific stuff...
	if [[ $platform == "cm" ]];
	then
	    awk '/Date,Advertiser,Advertiser ID/,0' "$csv_file" > pmt
	    sed -i '' -e '$ d' pmt
	    tail -n +2 pmt | \
		awk -v var="${proc_file:10}" 'BEGIN { FS=OFS="," } { print var "," $0 }' | \
		csvformat -T > tmp && mv tmp "$proc_file" && rm pmt

	# dv specific stuff...
	elif [[ $platform == "dv" ]];
	then
	    awk -F, 'BEGIN { OFS = FS } $1 != "" { print; next } { exit }' "$csv_file" |
		tail -n +2 > pmt

	    awk -v var="${proc_file:10}" 'BEGIN{ FS = OFS = "," } { print var","$0 }' pmt | \
		csvformat -T | \
		sed -E 's,\t([0-9]{4})/([0-9]{2})/([0-9]{2})\t,\t\1-\2-\3\t,g' > tmp && mv tmp "$proc_file" && rm pmt

	else
	    exit 1
	fi


	# track in tracking file
	if [ $? -eq 0 ];
	then
	    printf "$report_date\t${platform}360\t${file##*/}\t${proc_file##*/}\t$(date)\t0\n" >> tracking
	else
	    printf "Error processing file: $file\n"
	fi
	printf "Wrote: ${proc_file:10}\n"

	rm "$target_dir/$base_name"
    
	(( iters++ ))

	echo "Records processed & field count:"
	awk -F'\t' '{ print NF }' "$proc_file" | sort | uniq -c
    fi
done


printf "%0.s=" {1..80}
printf "\nWrote $iters $platform proc_ files to upload (refer to ./tracking for details)\n\n"



# cd $SAVEPWD





#
# jdeerwester, 2024-01-25
#
